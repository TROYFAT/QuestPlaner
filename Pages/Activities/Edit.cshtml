@page "{id:int}"
@model QuestPlanner.Pages.Activities.EditModel
@{
    ViewData["Title"] = "Редактировать активность";
}

<div class="content-container bg-white rounded shadow-sm p-4">
    <h1 class="text-center mb-4">Редактировать активность</h1>
    <h4 class="text-center mb-4">для поездки: @Model.Trip.Title</h4>

    <form method="post">
        <input type="hidden" asp-for="Activity.Id" />
        <input type="hidden" asp-for="Activity.TripId" />

        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

        <div class="form-group mb-3">
            <label asp-for="Activity.Name" class="form-label">Название *</label>
            <input asp-for="Activity.Name" class="form-control" />
            <span asp-validation-for="Activity.Name" class="text-danger"></span>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Activity.StartTime" class="form-label">Дата начала *</label>
                    <input asp-for="Activity.StartTime" class="form-control" type="datetime-local" />
                    <span asp-validation-for="Activity.StartTime" class="text-danger"></span>
                    <small class="form-text text-muted">
                        Поездка: @Model.Trip.StartDate.ToString("dd.MM.yyyy") - @Model.Trip.EndDate.ToString("dd.MM.yyyy")
                    </small>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Activity.EndTime" class="form-label">Дата окончания *</label>
                    <input asp-for="Activity.EndTime" class="form-control" type="datetime-local" />
                    <span asp-validation-for="Activity.EndTime" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Activity.Price" class="form-label">Цена *</label>
                    <input asp-for="Activity.Price" class="form-control" min="0" step="0.01" />
                    <span asp-validation-for="Activity.Price" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Activity.Location" class="form-label">Местоположение</label>
                    <input asp-for="Activity.Location" class="form-control" />
                    <span asp-validation-for="Activity.Location" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-group mb-4">
            <label asp-for="Activity.Progress" class="form-label">Прогресс</label>
            <div class="d-flex align-items-center">
                <input asp-for="Activity.Progress" class="form-range" type="range" min="0" max="100" step="5"
                       id="progress-slider" />
                <span class="ms-3" id="progress-value">@Model.Activity.Progress%</span>
            </div>
            <span asp-validation-for="Activity.Progress" class="text-danger"></span>
        </div>

        <div class="form-group mt-4 text-center">
            <button type="submit" class="btn btn-primary">Сохранить</button>
            <a asp-page="Index" asp-route-tripId="@Model.Activity.TripId" class="btn btn-secondary ms-2">Назад к активностям</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const progressSlider = document.getElementById('progress-slider');
            const progressValue = document.getElementById('progress-value');

            if (progressSlider && progressValue) {
                progressSlider.addEventListener('input', function() {
                    progressValue.textContent = this.value + '%';
                });
                progressValue.textContent = progressSlider.value + '%';
            }

            const tripStart = new Date('@Model.Trip.StartDate.ToString("yyyy-MM-ddTHH:mm:ss")');
            const tripEnd = new Date('@Model.Trip.EndDate.ToString("yyyy-MM-ddTHH:mm:ss")');

            function formatDateTime(date) {
                const pad = num => num.toString().padStart(2, '0');
                return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())}T${pad(date.getHours())}:${pad(date.getMinutes())}`;
            }

            const startTimeInput = document.querySelector('input[name="Activity.StartTime"]');
            const endTimeInput = document.querySelector('input[name="Activity.EndTime"]');

            if (startTimeInput) {
                startTimeInput.value = formatDateTime(new Date('@Model.Activity.StartTime.ToString("O")'));
            }
            if (endTimeInput) {
                endTimeInput.value = formatDateTime(new Date('@Model.Activity.EndTime.ToString("O")'));
            }

            if (startTimeInput && endTimeInput) {
                startTimeInput.addEventListener('change', validateDates);
                endTimeInput.addEventListener('change', validateDates);

                function validateDates() {
                    const start = new Date(startTimeInput.value);
                    const end = new Date(endTimeInput.value);

                    startTimeInput.setCustomValidity('');
                    endTimeInput.setCustomValidity('');

                    if (end <= start) {
                        endTimeInput.setCustomValidity('Дата окончания должна быть позже даты начала');
                    }

                    if (start < tripStart) {
                        startTimeInput.setCustomValidity(
                            `Дата не может быть раньше ${tripStart.toLocaleDateString()}`
                        );
                    }

                    if (end > tripEnd) {
                        endTimeInput.setCustomValidity(
                            `Дата не может быть позже ${tripEnd.toLocaleDateString()}`
                        );
                    }

                    startTimeInput.reportValidity();
                    endTimeInput.reportValidity();
                }
            }
        });
    </script>
}